<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.car.business.mapper.AppointmentMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.car.business.domain.Appointment" >
    <id column="id" property="id" />
    <result column="customer_name" property="customerName" />
    <result column="customer_phone" property="customerPhone" />
    <result column="appointment_time" property="appointmentTime" />
    <result column="actual_arrival_time" property="actualArrivalTime" />
    <result column="license_plate" property="licensePlate" />
    <result column="car_series" property="carSeries" />
    <result column="service_type" property="serviceType" />
    <result column="create_time" property="createTime" />
    <result column="info" property="info" />
    <result column="status" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" >
    delete from bus_appointment
    where id = #{id}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into bus_appointment (customer_name, customer_phone, appointment_time, actual_arrival_time, 
      license_plate, car_series, service_type, create_time, info, status
      )
    values (#{customerName}, #{customerPhone}, #{appointmentTime}, #{actualArrivalTime}, 
      #{licensePlate}, #{carSeries}, #{serviceType}, #{createTime}, #{info}, #{status}
      )
  </insert>
  <update id="updateByPrimaryKey" >
    update bus_appointment
    set customer_name = #{customerName},
      customer_phone = #{customerPhone},
      appointment_time = #{appointmentTime},
      actual_arrival_time = #{actualArrivalTime},
      license_plate = #{licensePlate},
      car_series = #{carSeries},
      service_type = #{serviceType},
      create_time = #{createTime},
      info = #{info},
      status = #{status}
    where id = #{id}
  </update>
  <update id="changeStatus">
    update bus_appointment set status = #{statusArrival}, actual_arrival_time = now() where id = #{id}
  </update>
  <update id="statusCancel">
    update bus_appointment set status = #{statusCancel} where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, appointment_time, actual_arrival_time, 
    license_plate, car_series, service_type, create_time, info, status
    from bus_appointment
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, appointment_time, actual_arrival_time, 
    license_plate, car_series, service_type, create_time, info, status
    from bus_appointment
  </select>
  <select id="selectForList" resultMap="BaseResultMap" >
    select id, customer_name, customer_phone, appointment_time, actual_arrival_time,
           license_plate, car_series, service_type, create_time, info, status
    from bus_appointment
    <where>
      <if test="customerName!=null and customerName!= ''">
        and customer_name like concat('%',#{customerName},'%')
      </if>
      <if test="customerPhone!=null and customerPhone!=''">
        and customer_phone like concat('%',#{customerPhone},'%')
      </if>
      <if test="status!=null">
        and status = #{status}
      </if>
    </where>
  </select>
</mapper>